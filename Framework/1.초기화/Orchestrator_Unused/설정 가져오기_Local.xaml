<Activity mc:Ignorable="sap sap2010" x:Class="설정_가져오기_Local" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:ila="clr-namespace:ITMSG.LogActivities.Activities;assembly=ITMSG.LogActivities.Activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_str_CommonConfig이름" Type="InArgument(x:String)" />
    <x:Property Name="in_str_과제Config이름" Type="InArgument(x:String)" />
    <x:Property Name="io_dic_설정" Type="InOutArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="in_str_Config초기경로" Type="InArgument(x:String)" />
  </x:Members>
  <this:설정_가져오기_Local.in_str_Config초기경로>
    <InArgument x:TypeArguments="x:String" />
  </this:설정_가져오기_Local.in_str_Config초기경로>
  <sap:VirtualizedContainerService.HintSize>676,1021</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="70">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>CredentialManagement</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>ITMSG.LogActivities.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>ITMSG.LogActivities.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart sap2010:Annotation.AnnotationText="1. Common Config xlsx를 가져옴&#xA;   1. xlsx가 있으면 io_dic_설정에 할당 후 2으로 이동&#xA;2. Specific Config xlsx를 가져옴&#xA;   1. xlsx가 있으면 io_dic_설정에 할당 후 3으로 이동&#xA;3. io_dic_설정을 통하여 {} 치환" DisplayName="설정 가져오기_Local" sap:VirtualizedContainerService.HintSize="686,996" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="str_Config경로" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Common" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Double x:Key="Width">652.04421270825321</x:Double>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Double x:Key="Height">863</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,125.6</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,225.6</av:Point>
          <av:Size x:Key="ShapeSize">200,90</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,315.6 300,327</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Sequence - Specific 설정 가져옴_Local" sap:VirtualizedContainerService.HintSize="200,90" sap2010:WorkflowViewState.IdRef="Sequence_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message - [ Specific 설정 가져오기 ] 시작" sap:VirtualizedContainerService.HintSize="596,91" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;[ Specific 설정 가져오기 ] 시작 &quot;]" />
        <ui:KillProcess AppliesTo="{x:Null}" Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process - Excel 종료" sap:VirtualizedContainerService.HintSize="596,132" sap2010:WorkflowViewState.IdRef="KillProcess_3" ProcessName="Excel" />
        <Sequence DisplayName="Sequence - SpecificConfig 읽기" sap:VirtualizedContainerService.HintSize="596,1431" sap2010:WorkflowViewState.IdRef="Sequence_13">
          <Sequence.Variables>
            <Variable x:TypeArguments="scg:List(x:String)" Name="list_str_Sheet이름" />
            <Variable x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)" Name="dic_과제Sheet" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign - Config 경로" sap:VirtualizedContainerService.HintSize="554,60" sap2010:WorkflowViewState.IdRef="Assign_11">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[str_Config경로]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_str_Config초기경로 + in_str_과제Config이름+".xlsx"]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Config 존재여부 workflow" sap:VirtualizedContainerService.HintSize="554,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\1.초기화\Orchestrator_Unused\설정 가져오기_Local\Config 존재여부.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_str_Config경로">[str_Config경로]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_str_기본소스내Config이름">[in_str_과제Config이름]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Assign DisplayName="Assign - 과제 Config 내용을 담을 공간" sap:VirtualizedContainerService.HintSize="554,60" sap2010:WorkflowViewState.IdRef="Assign_14">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[dic_과제Sheet]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[New Dictionary(Of String, DataTable)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Excel Application Scope - 과제 Config 읽어오기" sap:VirtualizedContainerService.HintSize="554,456" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[str_Config경로]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="실행 - 각각 Sheet 내용 읽어오기" sap:VirtualizedContainerService.HintSize="412,347" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets - 과제 Sheet" sap:VirtualizedContainerService.HintSize="370,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[list_str_Sheet이름]" />
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - 과제 Sheet 읽어오기" sap:VirtualizedContainerService.HintSize="370,193" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[list_str_Sheet이름]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
                        </ActivityAction.Argument>
                        <ui:ExcelReadRange AddHeaders="True" DataTable="[dic_과제Sheet(sheet)]" DisplayName="Read Range - 과제 Sheet 읽어오기" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" SheetName="[sheet]">
                          <ui:ExcelReadRange.Range>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:ExcelReadRange.Range>
                        </ui:ExcelReadRange>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
          </ui:ExcelApplicationScope>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - 과제 Config 내용 추가" sap:VirtualizedContainerService.HintSize="554,491" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[dic_과제Sheet.Keys]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="Key" />
                </ActivityAction.Argument>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dic_과제Sheet(Key)]" DisplayName="For Each Row in Data Table - 과제 Config 내용 추가" sap:VirtualizedContainerService.HintSize="518,357" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                      </ActivityAction.Argument>
                      <If Condition="[Not String.IsNullOrEmpty(CurrentRow(&quot;Key&quot;).ToString.Trim)]" DisplayName="If - Key값이 공백이 아닌경우만 데이터 추가" sap:VirtualizedContainerService.HintSize="484,237" sap2010:WorkflowViewState.IdRef="If_7">
                        <If.Then>
                          <Assign DisplayName="Assign - 공통 Config 추가" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[io_dic_설정(CurrentRow("Key").ToString.Trim)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[CurrentRow("Value").ToString.Trim]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                      </If>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </Sequence>
        <Sequence DisplayName="Sequence - {}값 치환하기" sap:VirtualizedContainerService.HintSize="596,235" sap2010:WorkflowViewState.IdRef="Sequence_14">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="{}{} 의 값을 치환한다." DisplayName="Invoke CommonConfig값_치환 workflow" sap:VirtualizedContainerService.HintSize="379,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\1.초기화\1-1.공통\Config값_치환.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_dic_설정">[io_dic_설정]</InOutArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
        </Sequence>
        <ui:LogMessage DisplayName="Log Message - [ Specific 설정 가져오기 ] 종료" sap:VirtualizedContainerService.HintSize="596,91" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;[ Specific 설정 가져오기 ] 종료&quot;]" />
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,327</av:Point>
              <av:Size x:Key="ShapeSize">200,90</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,417 300,427</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Sequence - Log 파일 경로 설정" sap:VirtualizedContainerService.HintSize="200,90" sap2010:WorkflowViewState.IdRef="Sequence_22">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message - [ Log 파일 경로 설정 ] 시작" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info" Message="[&quot;[ Log 파일 경로 설정 ] 시작&quot;]" />
            <Assign DisplayName="Assign - Log파일 저장 경로" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_16">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[io_dic_설정("Log파일")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Format("{0}{1}_{2}_{3}.txt", io_dic_설정("과제 로그 폴더"), io_dic_설정("과제 코드"), io_dic_설정("과제 이름"), Now.ToString("yyyyMMdd_HHmmss"))]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File - 로그파일 경로 수정" FileName="User\Config\LogConfig.txt" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[io_dic_설정(&quot;Log파일&quot;)]" />
            <ui:LogMessage DisplayName="Log Message - [ Log 파일 경로 설정 ] 종료" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[&quot;[ Log 파일 경로 설정 ] 종료&quot;]" />
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,427</av:Point>
                  <av:Size x:Key="ShapeSize">200,90</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,517 300,557</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="공용 폴더 생성" sap:VirtualizedContainerService.HintSize="400,1395" sap2010:WorkflowViewState.IdRef="Sequence_24">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder - RPA 최상단 경로" sap:VirtualizedContainerService.HintSize="338,89" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[io_dic_설정(&quot;RPA 루트 폴더&quot;)]" />
                <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder - RPA 프로세스 경로" sap:VirtualizedContainerService.HintSize="338,89" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[io_dic_설정(&quot;과제 루트 폴더&quot;)]" />
                <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder - RPA 프로세스 데이터 경로" sap:VirtualizedContainerService.HintSize="338,89" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[io_dic_설정(&quot;과제 데이터 폴더&quot;)]" />
                <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder - RPA 프로세스 입력 데이터 경로" sap:VirtualizedContainerService.HintSize="338,89" sap2010:WorkflowViewState.IdRef="CreateDirectory_5" Path="[io_dic_설정(&quot;과제 입력 폴더&quot;)]" />
                <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder - RPA 프로세스 출력 데이터 경로" sap:VirtualizedContainerService.HintSize="338,89" sap2010:WorkflowViewState.IdRef="CreateDirectory_6" Path="[io_dic_설정(&quot;과제 출력 폴더&quot;)]" />
                <Assign sap2010:Annotation.AnnotationText="하루에 여러번 실행하는 경우가 있어 시간별 추가 폴더를 생성" DisplayName="Assign - 예외폴더 시간폴더 추가" sap:VirtualizedContainerService.HintSize="338,112" sap2010:WorkflowViewState.IdRef="Assign_17">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[io_dic_설정("과제 예외 폴더")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[io_dic_설정("과제 예외 폴더") + Now.ToString("HHmmss") + "\"]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder - RPA 프로세스 예외 데이터 경로" sap:VirtualizedContainerService.HintSize="338,89" sap2010:WorkflowViewState.IdRef="CreateDirectory_7" Path="[io_dic_설정(&quot;과제 예외 폴더&quot;)]" />
                <ui:CreateDirectory Output="{x:Null}" ContinueOnError="True" DisplayName="Create Folder - RPA 프로세스 로그 파일 경로" sap:VirtualizedContainerService.HintSize="338,89" sap2010:WorkflowViewState.IdRef="CreateDirectory_8" Path="[io_dic_설정(&quot;과제 로그 폴더&quot;)]" />
                <ui:Delete ResourceFile="{x:Null}" ContinueOnError="True" DisplayName="Delete - RPA 프로세스 메일 첨부파일 경로" sap:VirtualizedContainerService.HintSize="338,89" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[io_dic_설정(&quot;과제 메일 폴더&quot;)]" />
                <ui:CreateDirectory Output="{x:Null}" ContinueOnError="True" DisplayName="Create Folder - RPA 프로세스 메일 첨부파일 경로" sap:VirtualizedContainerService.HintSize="338,89" sap2010:WorkflowViewState.IdRef="CreateDirectory_9" Path="[io_dic_설정(&quot;과제 메일 폴더&quot;)]" />
              </Sequence>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID1" Condition="[Convert.ToBoolean(io_dic_설정(&quot;알람 사용 여부&quot;))]" DisplayName="알람 사용 여부" sap:VirtualizedContainerService.HintSize="86,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <av:Point x:Key="ShapeLocation">257,557</av:Point>
                      <av:Size x:Key="ShapeSize">86,87</av:Size>
                      <av:PointCollection x:Key="TrueConnector">257,600.5 170,600.5 170,667</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">70,667</av:Point>
                          <av:Size x:Key="ShapeSize">200,90</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">170,757 170,773</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Sequence - 알람 설정 가져오기" sap:VirtualizedContainerService.HintSize="200,90" sap2010:WorkflowViewState.IdRef="Sequence_20">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="str_Sheet이름" />
                          <Variable x:TypeArguments="sd:DataTable" Name="dt_알람" />
                          <Variable x:TypeArguments="sd:DataTable" Name="dt_과제알람" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ila:ITMSGLog ContinueOnError="{x:Null}" DisplayName="ITMSG Log - [ 알람 설정 가져오기 ] 시작" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="ITMSGLog_1" LogLevel="Info" Message="[ 알람 설정 가져오기 ] 시작" WriteConsole="True" />
                        <ui:CreateDirectory Output="{x:Null}" ContinueOnError="True" DisplayName="Create Folder - 알람 폴더 생성" sap:VirtualizedContainerService.HintSize="434,89" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[io_dic_설정(&quot;알람Config경로&quot;)]" />
                        <Assign DisplayName="Assign - 알람 Config Full 경로" sap:VirtualizedContainerService.HintSize="434,70" sap2010:WorkflowViewState.IdRef="Assign_15">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[io_dic_설정("알람ConfigFull경로")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[io_dic_설정("알람Config경로") + io_dic_설정("알람Config이름")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Config 존재여부 workflow" sap:VirtualizedContainerService.HintSize="434,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\1.초기화\Orchestrator_Unused\설정 가져오기_Local\Config 존재여부.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_str_Config경로">[io_dic_설정("알람ConfigFull경로")]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_str_기본소스내Config이름">공용_알람_Config</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Excel Application Scope - 알람 Config 읽어오기" sap:VirtualizedContainerService.HintSize="434,439" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[io_dic_설정(&quot;알람ConfigFull경로&quot;)]">
                          <ui:ExcelApplicationScope.Body>
                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="실행 - 알람 Config 읽어오기" sap:VirtualizedContainerService.HintSize="400,320" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelGetWorkbookSheet DisplayName="Get Workbook Sheet - 첫번째 시트 이름" sap:VirtualizedContainerService.HintSize="338,89" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheet_1" Index="0" Sheet="[str_Sheet이름]" />
                                <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_알람]" DisplayName="Read Range - 알람 Config 읽어오기" sap:VirtualizedContainerService.HintSize="338,69" sap2010:WorkflowViewState.IdRef="ExcelReadRange_5" SheetName="[str_Sheet이름]">
                                  <ui:ExcelReadRange.Range>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </ui:ExcelReadRange.Range>
                                </ui:ExcelReadRange>
                              </Sequence>
                            </ActivityAction>
                          </ui:ExcelApplicationScope.Body>
                        </ui:ExcelApplicationScope>
                        <ui:FilterDataTable DataTable="[dt_알람]" DisplayName="Filter Data Table - 과제 명단 가져오기" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,170" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt_과제알람]" SelectColumnsMode="Keep">
                          <ui:FilterDataTable.Filters>
                            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                <ui:FilterOperationArgument.Column>
                                  <InArgument x:TypeArguments="x:String">["과제 코드"]</InArgument>
                                </ui:FilterOperationArgument.Column>
                                <ui:FilterOperationArgument.Operand>
                                  <InArgument x:TypeArguments="x:String">[io_dic_설정("과제 코드")]</InArgument>
                                </ui:FilterOperationArgument.Operand>
                              </ui:FilterOperationArgument>
                              <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
                                <ui:FilterOperationArgument.Column>
                                  <InArgument x:TypeArguments="x:String">["과제 코드"]</InArgument>
                                </ui:FilterOperationArgument.Column>
                                <ui:FilterOperationArgument.Operand>
                                  <InArgument x:TypeArguments="x:String">["공통"]</InArgument>
                                </ui:FilterOperationArgument.Operand>
                              </ui:FilterOperationArgument>
                            </scg:List>
                          </ui:FilterDataTable.Filters>
                          <ui:FilterDataTable.SelectColumns>
                            <scg:List x:TypeArguments="InArgument" Capacity="4">
                              <x:Null />
                            </scg:List>
                          </ui:FilterDataTable.SelectColumns>
                        </ui:FilterDataTable>
                        <ui:OutputDataTable DataTable="[dt_과제알람]" DisplayName="Output Data Table - 과제알람" sap:VirtualizedContainerService.HintSize="434,89" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[io_dic_설정(&quot;과제알람Table&quot;)]" />
                        <ila:ITMSGLog ContinueOnError="{x:Null}" DisplayName="ITMSG Log - 수신자 명단" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="ITMSGLog_3" LogLevel="Info" Message="[&quot;[ 알람 설정 가져오기 ] 수신자 명단&quot; + Chr(13) + io_dic_설정(&quot;과제알람Table&quot;)]" WriteConsole="True" />
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke 수신자명단 붙이기 workflow" sap:VirtualizedContainerService.HintSize="434,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\1.초기화\1-1.공통\수신자명단 붙이기.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_과제알람">[dt_과제알람]</InArgument>
                            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_dic_설정">[io_dic_설정]</InOutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ila:ITMSGLog ContinueOnError="{x:Null}" DisplayName="ITMSG Log - [ 알람 설정 가져오기 ] 종료" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="ITMSGLog_2" LogLevel="Info" Message="[ 알람 설정 가져오기 ] 종료" WriteConsole="True" />
                      </Sequence>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">70,773</av:Point>
                              <av:Size x:Key="ShapeSize">200,90</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Sequence - Html 파일 복사" sap:VirtualizedContainerService.HintSize="200,90" sap2010:WorkflowViewState.IdRef="Sequence_23">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message - [ Html 파일 복사 ] 시작" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[&quot;[ Html 파일 복사 ] 시작&quot;]" />
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Html 존재여부 workflow - 성공메일" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\1.초기화\Orchestrator_Unused\설정 가져오기_Local\Html 존재여부.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_str_Html경로">[io_dic_설정("성공 HTML 경로")]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_str_기본소스내Html이름">성공메일</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Html 존재여부 workflow - 에러메일" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\1.초기화\Orchestrator_Unused\설정 가져오기_Local\Html 존재여부.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_str_Html경로">[io_dic_설정("에러 HTML 경로")]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_str_기본소스내Html이름">에러메일</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Html 존재여부 workflow - 중지메일" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\1.초기화\Orchestrator_Unused\설정 가져오기_Local\Html 존재여부.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_str_Html경로">[io_dic_설정("중지 HTML 경로")]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_str_기본소스내Html이름">중지메일</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <If Condition="[CBool(io_dic_설정(&quot;과제 전용 HTML 사용여부&quot;))]" DisplayName="If - 과제 전용 HTML이 존재하면 사용" sap:VirtualizedContainerService.HintSize="484,289" sap2010:WorkflowViewState.IdRef="If_8">
                              <If.Then>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Html 존재여부 workflow - 과제 전용" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\1.초기화\Orchestrator_Unused\설정 가져오기_Local\Html 존재여부.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_str_Html경로">[io_dic_설정("과제 전용 HTML 경로")]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_str_기본소스내Html이름">과제전용</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </If.Then>
                            </If>
                            <ui:LogMessage DisplayName="Log Message - [ Html 파일 복사 ] 종료" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[&quot;[ Html 파일 복사 ] 종료&quot;]" />
                          </Sequence>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.True>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,125.6</av:Point>
          <av:Size x:Key="ShapeSize">200,90</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,215.6 300,225.6</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Sequence - 공통 설정 가져오기_Local" sap:VirtualizedContainerService.HintSize="200,90" sap2010:WorkflowViewState.IdRef="Sequence_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message - [ 공통 설정 Config 가져오기 ] 시작" sap:VirtualizedContainerService.HintSize="598,91" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;[ 공통 설정 Config 가져오기 ] 시작&quot;]" />
        <ui:KillProcess AppliesTo="{x:Null}" Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process - Excel 종료" sap:VirtualizedContainerService.HintSize="598,132" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="Excel" />
        <TryCatch DisplayName="Try Catch - 공통 설정 Config 가져오기" sap:VirtualizedContainerService.HintSize="598,1379" sap2010:WorkflowViewState.IdRef="TryCatch_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <Sequence DisplayName="Sequence - CommonConfig 파일 읽기" sap:VirtualizedContainerService.HintSize="560,909" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Config 경로" sap:VirtualizedContainerService.HintSize="518,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_Config경로]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_str_Config초기경로 + in_str_CommonConfig이름+".xlsx"]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Config 존재여부 workflow" sap:VirtualizedContainerService.HintSize="518,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\1.초기화\Orchestrator_Unused\설정 가져오기_Local\Config 존재여부.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_str_Config경로">[str_Config경로]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_str_기본소스내Config이름">[in_str_CommonConfig이름]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Excel Application Scope - 공통 Config 읽어오기" sap:VirtualizedContainerService.HintSize="518,168" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[str_Config경로]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_Common]" DisplayName="Read Range - 공통 Sheet 읽어오기" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="공통">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
              </ui:ExcelApplicationScope>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_Common]" DisplayName="For Each Row in Data Table - 공통 Config 내용 추가" sap:VirtualizedContainerService.HintSize="518,357" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                    </ActivityAction.Argument>
                    <If Condition="[Not String.IsNullOrEmpty(CurrentRow(&quot;Key&quot;).ToString.Trim)]" DisplayName="If - Key값이 공백이 아닌경우만 데이터 추가" sap:VirtualizedContainerService.HintSize="484,237" sap2010:WorkflowViewState.IdRef="If_6">
                      <If.Then>
                        <Assign DisplayName="Assign - 공통 Config 추가" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[io_dic_설정(CurrentRow("Key").ToString.Trim)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[CurrentRow("Value").ToString.Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                    </If>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="564,160" sap2010:WorkflowViewState.IdRef="Catch`1_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <ui:LogMessage DisplayName="Log Message - Common 설정 에러" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Error" Message="[&quot;&lt;&quot; + in_str_CommonConfig이름 + &quot;&gt; 이름을 사용하는 Config.xlsx 를 찾을 수 없습니다.&quot;]" />
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
        <ui:LogMessage DisplayName="Log Message - [ 공통 설정 Config 가져오기 ] 종료" sap:VirtualizedContainerService.HintSize="598,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;[ 공통 설정 Config 가져오기 ] 종료&quot;]" />
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID0</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
  </Flowchart>
</Activity>